{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"director-director","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyOWtkFkgdUlcCgXGDE+6JYJ"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gum5vTInVL-0","executionInfo":{"status":"ok","timestamp":1618503183548,"user_tz":300,"elapsed":20340,"user":{"displayName":"yilin yang","photoUrl":"","userId":"14721659823629954663"}},"outputId":"eace6e2d-e1bb-45e4-f4e6-0a0f253f62cb"},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Mounted at /content/drive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3xWyuoYRV1AS","executionInfo":{"status":"ok","timestamp":1618503185722,"user_tz":300,"elapsed":863,"user":{"displayName":"yilin yang","photoUrl":"","userId":"14721659823629954663"}},"outputId":"4858c427-cd6b-4cd7-f4b0-aa5035c476b4"},"source":["import os\n","cur_path = \"/content/drive/MyDrive/bds/\"\n","os.chdir(cur_path)\n","!pwd"],"execution_count":2,"outputs":[{"output_type":"stream","text":["/content/drive/MyDrive/bds\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YuzXpqumV1P3","executionInfo":{"status":"ok","timestamp":1618503187505,"user_tz":300,"elapsed":700,"user":{"displayName":"yilin yang","photoUrl":"","userId":"14721659823629954663"}},"outputId":"88c0622a-68af-4031-cd59-41642231b6b7"},"source":["!ls"],"execution_count":3,"outputs":[{"output_type":"stream","text":["cast_cast\t   common_neighbor.txt\tdirector-director    netflix_titles.csv\n","cast_director.txt  dc.ipynb\t\tdirector.txt\t     netflix_titles.txt\n","cast.txt\t   dd.ipynb\t\tfinal-project\n","cc.ipynb\t   director_cast\tfinal_project.ipynb\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"kx4Mu2KSYpNk","executionInfo":{"status":"ok","timestamp":1618503189638,"user_tz":300,"elapsed":1347,"user":{"displayName":"yilin yang","photoUrl":"","userId":"14721659823629954663"}}},"source":["import pandas as pd\n","import networkx as nx\n","from collections import Counter"],"execution_count":4,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":202},"id":"X5xsHkCNYu3i","executionInfo":{"status":"ok","timestamp":1618503190875,"user_tz":300,"elapsed":603,"user":{"displayName":"yilin yang","photoUrl":"","userId":"14721659823629954663"}},"outputId":"09c5daf5-d49a-4ab5-a4ae-6311aacb2b7e"},"source":["df = pd.read_csv('director.txt',names=['Source','Target'])\n","df.head()"],"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Source</th>\n","      <th>Target</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Richard Finn</td>\n","      <td>Tim Maltby</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Francisco Schultz</td>\n","      <td>Rodrigo Toro</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Munjal Shroff</td>\n","      <td>Tilak Shetty</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Munjal Shroff</td>\n","      <td>Tilak Shetty</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Munjal Shroff</td>\n","      <td>Tilak Shetty</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["              Source        Target\n","0       Richard Finn    Tim Maltby\n","1  Francisco Schultz  Rodrigo Toro\n","2      Munjal Shroff  Tilak Shetty\n","3      Munjal Shroff  Tilak Shetty\n","4      Munjal Shroff  Tilak Shetty"]},"metadata":{"tags":[]},"execution_count":5}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"U04urlo2ZT-a","executionInfo":{"status":"ok","timestamp":1618503194506,"user_tz":300,"elapsed":264,"user":{"displayName":"yilin yang","photoUrl":"","userId":"14721659823629954663"}},"outputId":"6cf34ed1-5f4e-4a77-b5bf-b0580255f083"},"source":["df.shape"],"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1120, 2)"]},"metadata":{"tags":[]},"execution_count":6}]},{"cell_type":"code","metadata":{"id":"idCujWTAZFDz","executionInfo":{"status":"ok","timestamp":1618503196097,"user_tz":300,"elapsed":815,"user":{"displayName":"yilin yang","photoUrl":"","userId":"14721659823629954663"}}},"source":["# drop duplicate rows\n","df.drop_duplicates(inplace=True)"],"execution_count":7,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yuU1Rl5CZX4x","executionInfo":{"status":"ok","timestamp":1618503197728,"user_tz":300,"elapsed":659,"user":{"displayName":"yilin yang","photoUrl":"","userId":"14721659823629954663"}},"outputId":"a53c7623-bdb7-4a59-bfd6-fa4a267f9cbe"},"source":["df.shape"],"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1046, 2)"]},"metadata":{"tags":[]},"execution_count":8}]},{"cell_type":"code","metadata":{"id":"sfQRscRTaek6","executionInfo":{"status":"ok","timestamp":1618503200157,"user_tz":300,"elapsed":863,"user":{"displayName":"yilin yang","photoUrl":"","userId":"14721659823629954663"}}},"source":["df['Source']=df['Source'].astype('str')"],"execution_count":9,"outputs":[]},{"cell_type":"code","metadata":{"id":"oS9-Omg_aioc","executionInfo":{"status":"ok","timestamp":1618503201205,"user_tz":300,"elapsed":272,"user":{"displayName":"yilin yang","photoUrl":"","userId":"14721659823629954663"}}},"source":["df['Target']=df['Target'].astype('str')"],"execution_count":10,"outputs":[]},{"cell_type":"code","metadata":{"id":"oSua-zEnZY1F","executionInfo":{"status":"ok","timestamp":1618503206212,"user_tz":300,"elapsed":740,"user":{"displayName":"yilin yang","photoUrl":"","userId":"14721659823629954663"}}},"source":["# Creating an empty graph object\n","G = nx.Graph()"],"execution_count":11,"outputs":[]},{"cell_type":"code","metadata":{"id":"i3V7yQIuZeVg","executionInfo":{"status":"ok","timestamp":1618503207871,"user_tz":300,"elapsed":542,"user":{"displayName":"yilin yang","photoUrl":"","userId":"14721659823629954663"}}},"source":["for _, edge in df.iterrows():\n","    G.add_edge(edge['Source'], edge['Target'])"],"execution_count":12,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"A87mwBejatF1","executionInfo":{"status":"ok","timestamp":1618503210422,"user_tz":300,"elapsed":514,"user":{"displayName":"yilin yang","photoUrl":"","userId":"14721659823629954663"}},"outputId":"9d3f25b7-7b57-42d7-8693-6f4247a82259"},"source":["G.number_of_nodes()"],"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["871"]},"metadata":{"tags":[]},"execution_count":13}]},{"cell_type":"code","metadata":{"id":"CeGqy-1f1giH","executionInfo":{"status":"ok","timestamp":1618503221055,"user_tz":300,"elapsed":335,"user":{"displayName":"yilin yang","photoUrl":"","userId":"14721659823629954663"}}},"source":["sort_list = sorted(G.degree, key=lambda x: x[1], reverse=True)\n","node_list = [node for (node, val) in sort_list][:30]"],"execution_count":14,"outputs":[]},{"cell_type":"code","metadata":{"id":"5pa8SYOmZkez","executionInfo":{"status":"ok","timestamp":1618503267044,"user_tz":300,"elapsed":603,"user":{"displayName":"yilin yang","photoUrl":"","userId":"14721659823629954663"}}},"source":["def common_neighbors(G,K):\n","    node = sorted(list(G))\n","    f = open(\"common_neighbor_dd.txt\", \"a\")\n","    for i in node_list:\n","        neighbor=[n for n in G.neighbors(i)]\n","        non_neighbor = list(set(node)-set(neighbor))\n","        non_neighbor.remove(i)\n","        new_dict={}\n","        for j in non_neighbor:\n","            neighbor_j = [n for n in G.neighbors(j)]\n","            common = [value for value in neighbor if value in neighbor_j]\n","            new_dict[j] = len(common)\n","            k = Counter(new_dict)\n","            high = k.most_common(K)\n","            my_keys = [key for key, val in high]\n","        line = [*[i],*my_keys]\n","        f.write(','.join(line)+'\\n')\n","    f.close()       "],"execution_count":15,"outputs":[]},{"cell_type":"code","metadata":{"id":"QLzRqF_3T44l","executionInfo":{"status":"ok","timestamp":1618503275225,"user_tz":300,"elapsed":2497,"user":{"displayName":"yilin yang","photoUrl":"","userId":"14721659823629954663"}}},"source":["common_neighbors(G,10)"],"execution_count":16,"outputs":[]}]}